#pragma once


#include <stdint.h>


class soft_init_param
{
    soft_init_param();
    ~soft_init_param();
};


class Accel_Payload
{
    public:
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        /**
         *		@brief			function description
         *		@param	param0	param0 description
         *		@param	param1	param1 description
         *		@return			0 success, 1 failure
         */
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        Accel_Payload() { }
        
        
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        /**
         *		@brief			function description
         *		@param	param0	param0 description
         *		@param	param1	param1 description
         *		@return			0 success, 1 failure
         */
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        virtual ~Accel_Payload();
        
        
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        /**
         *		@brief			function description
         *		@param	param0	param0 description
         *		@param	param1	param1 description
         *		@return			0 success, 1 failure
         */
        // ----------------------------------------------------------------------------------------------------------------------------------------------       
        virtual void serialize() = 0;
        
        
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        /**
         *		@brief			function description
         *		@param	param0	param0 description
         *		@param	param1	param1 description
         *		@return			0 success, 1 failure
         */
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        virtual void deserialize() = 0;

        
        void*       m_buffer;
        uint64_t    m_remAddress;
        int         m_size;
};


class FPGA_hndl
{
    public:
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        /**
         *		@brief			function description
         *		@param	param0	param0 description
         *		@param	param1	param1 description
         *		@return			0 success, 1 failure
         */
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        FPGA_hndl() {}
        
        
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        /**
         *		@brief			function description
         *		@param	param0	param0 description
         *		@param	param1	param1 description
         *		@return			0 success, 1 failure
         */
        // ----------------------------------------------------------------------------------------------------------------------------------------------      
        ~FPGA_hndl() {}
        
        
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        /**
         *		@brief			function description
         *		@param	param0	param0 description
         *		@param	param1	param1 description
         *		@return			0 success, 1 failure
         */
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        virtual int hardware_init() = 0;
        
        
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        /**
         *		@brief			function description
         *		@param	param0	param0 description
         *		@param	param1	param1 description
         *		@return			0 success, 1 failure
         */
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        virtual int software_init(soft_init_param* param) = 0;
        
        
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        /**
         *		@brief			function description
         *		@param	param0	param0 description
         *		@param	param1	param1 description
         *		@return			0 success, 1 failure
         */
        // ----------------------------------------------------------------------------------------------------------------------------------------------        
        virtual uint64_t allocate(Accel_Payload* pyld, int size) = 0;
        
        
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        /**
         *		@brief			function description
         *		@param	param0	param0 description
         *		@param	param1	param1 description
         *		@return			0 success, 1 failure
         */
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        virtual void deallocate(Accel_Payload* pyld) = 0;

        
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        /**
         *		@brief			function description
         *		@param	param0	param0 description
         *		@param	param1	param1 description
         *		@return			0 success, 1 failure
         */
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        virtual uint64_t waitConfig() = 0;
        
        
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        /**
         *		@brief			function description
         *		@param	param0	param0 description
         *		@param	param1	param1 description
         *		@return			0 success, 1 failure
         */
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        virtual int wrConfig(Accel_Payload* pyld) = 0;
        
        
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        /**
         *		@brief			function description
         *		@param	param0	param0 description
         *		@param	param1	param1 description
         *		@return			0 success, 1 failure
         */
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        virtual int rdConfig(Accel_Payload* pyld) = 0;
        
        
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        /**
         *		@brief			function description
         *		@param	param0	param0 description
         *		@param	param1	param1 description
         *		@return			0 success, 1 failure
         */
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        virtual uint64_t waitParam() = 0;
       

        // ----------------------------------------------------------------------------------------------------------------------------------------------
        /**
         *		@brief			function description
         *		@param	param0	param0 description
         *		@param	param1	param1 description
         *		@return			0 success, 1 failure
         */
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        virtual int wrParam(Accel_Payload* pyld) = 0;
        
        
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        /**
         *		@brief			function description
         *		@param	param0	param0 description
         *		@param	param1	param1 description
         *		@return			0 success, 1 failure
         */
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        virtual int waitStart() = 0;
        
        
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        /**
         *		@brief			function description
         *		@param	param0	param0 description
         *		@param	param1	param1 description
         *		@return			0 success, 1 failure
         */
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        virtual int sendStart() = 0;
        
        
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        /**
         *		@brief			function description
         *		@param	param0	param0 description
         *		@param	param1	param1 description
         *		@return			0 success, 1 failure
         */
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        virtual int waitComplete() = 0;
        
        
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        /**
         *		@brief			function description
         *		@param	param0	param0 description
         *		@param	param1	param1 description
         *		@return			0 success, 1 failure
         */
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        virtual int sendComplete() = 0;
        
        
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        /**
         *		@brief			function description
         *		@param	param0	param0 description
         *		@param	param1	param1 description
         *		@return			0 success, 1 failure
         */
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        virtual int getOutput(Accel_Payload* pyld) = 0;
        
        
        
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        /**
         *		@brief			function description
         *		@param	param0	param0 description
         *		@param	param1	param1 description
         *		@return			0 success, 1 failure
         */
        // ----------------------------------------------------------------------------------------------------------------------------------------------
        virtual int sendOutput(Accel_Payload* pyld) = 0;
        
        
        int m_remAddrOfst;
};

